<Application x:Class="Tutorial.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:command="clr-namespace:Tutorial.WPF.Command"
             xmlns:VM="clr-namespace:Tutorial.WPF.ViewModel"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!--Application Color Pallet-->
            <SolidColorBrush x:Key="MainBackgroundColor" Color="#101E2D"/>
            <SolidColorBrush x:Key="ApplicationBackgroundColor" Color="#0a1928"/>
            <SolidColorBrush x:Key="ConfigBackround" Color="#D0DDEA"/>

            <SolidColorBrush x:Key="DropDownLinkToAllAreaBorder" Color="#009F40"/>
            <SolidColorBrush x:Key="DropDownDislinkAreaBorder" Color="#AA0202"/>

            <SolidColorBrush x:Key="ButtonBackgroundColor" Color="#223344"/>
            <SolidColorBrush x:Key="ButtonsForegroundColor" Color="#c5c5c5"/>

            <SolidColorBrush x:Key="ChromeBackground" Color="#FF112B4A" />
            <SolidColorBrush x:Key="InteractiveElementsColor" Color="#223344"/>

            <SolidColorBrush x:Key="NavigationBarColor" Color="#33506E"/>
            <SolidColorBrush x:Key="NavigationSelectedColor" Color="#CED4DC"/>
            <SolidColorBrush x:Key="NavigationForegroundColor" Color="White"/>

            <SolidColorBrush x:Key="Button.Static.Background" Color="DimGray"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="DarkSlateBlue"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#0a1928"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

            <!--Chrome Button Styles-->
            <command:CloseApplicationCommand x:Key="CloseCommand"/>
            <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyleIconClose">
                <Setter Property="Command" Value="{StaticResource CloseCommand}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox Stretch="Uniform">
                                <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                                        Name="IconCloseCanvas"
                                        Canvas.Left="0" 
                                        Canvas.Top="0" 
                                        Background="#33506E"
                                        Width="48" 
                                        Height="48">
                                    <Canvas.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Canvas.RenderTransform>
                                    <Canvas.Resources/>
                                    <Line xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" X1="13.3" Y1="12.5" X2="36.7" Y2="35.9" 
                                  Stroke="{TemplateBinding Foreground}"
                                  StrokeMiterLimit="10"/>
                                    <Line xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" X1="36.7" Y1="12.5" X2="13.3" Y2="35.9" 
                                  Stroke="{TemplateBinding Foreground}"
                                  StrokeMiterLimit="10"/>
                                    <Canvas.Style>
                                        <Style TargetType="Canvas">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard Name="MouseOverRedBackground">
                                                                <ColorAnimation To="Red" 
                                                        Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" 
                                                        FillBehavior="HoldEnd" 
                                                        Duration="0:0:0.35"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation To="#33506E" 
                                                        Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" 
                                                        FillBehavior="HoldEnd" 
                                                        Duration="0:0:0.15"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Canvas.Style>
                                </Canvas>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyleIconMinimize">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox Stretch="Uniform">
                                <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                Canvas.Left="0" 
                                Canvas.Top="0" 
                                Background="#33506E"
                                Width="48" 
                                Height="48">
                                    <Canvas.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Canvas.RenderTransform>
                                    <Canvas.Resources/>
                                    <Line xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                  X1="13.1" 
                                  Y1="24" 
                                  X2="32.5" 
                                  Y2="24" 
                                  Stroke="{TemplateBinding Foreground}" 
                                  StrokeMiterLimit="10"/>
                                    <Canvas.Style>
                                        <Style TargetType="Canvas">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard Name="MouseOverRedBackground">
                                                                <ColorAnimation To="LightBlue" 
                                                        Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" 
                                                        FillBehavior="HoldEnd" 
                                                        Duration="0:0:0.35"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation To="#33506E" 
                                                        Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" 
                                                        FillBehavior="HoldEnd" 
                                                        Duration="0:0:0.15"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Canvas.Style>
                                </Canvas>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyleIconMaximize">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Viewbox Stretch="Uniform">
                                <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                                Canvas.Left="0"
                                Canvas.Top="0" 
                                Width="48"
                                Background="#33506E"
                                Height="48">
                                    <Canvas.RenderTransform>
                                        <TranslateTransform X="0" Y="0"/>
                                    </Canvas.RenderTransform>
                                    <Canvas.Resources/>
                                    <Rectangle xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                       Canvas.Left="12.3" 
                                       Canvas.Top="12.5" 
                                       Width="23.4" 
                                       Height="23.4"
                                       Stroke="{TemplateBinding Foreground}" 
                                       StrokeMiterLimit="10"/>
                                    <Canvas.Style>
                                        <Style TargetType="Canvas">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard Name="MouseOverRedBackground">
                                                                <ColorAnimation To="LightBlue" 
                                                        Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" 
                                                        FillBehavior="HoldEnd" 
                                                        Duration="0:0:0.35"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <ColorAnimation To="#33506E" 
                                                        Storyboard.TargetProperty="(Canvas.Background).(SolidColorBrush.Color)" 
                                                        FillBehavior="HoldEnd" 
                                                        Duration="0:0:0.15"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Canvas.Style>
                                </Canvas>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--Default Control Styles-->
            <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="Silver"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                CornerRadius="0"
                                Background="{TemplateBinding Background}" 
                                    BorderThickness="2" 
                                    BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="True" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource InteractiveElementsColor}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DefaultTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="Silver"/>
                <Setter Property="Margin" Value="0 3 0 0"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="TextAlignment" Value="Center"/>
            </Style>
            <Style x:Key="DefaultHeaderTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlockStyle}">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style x:Key="HeaderTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="None"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="Margin" Value="0 2 0 2"/>
            </Style>
            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="2 2 2 2"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="False"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                                CornerRadius="6"
                                Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="False">
                                    <Setter Property="Background" Value="DimGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                CornerRadius="6"
                                Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="Snow"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="2 2 2 2"/>
                <Setter Property="MinHeight" Value="27"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="False"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="False">
                                    <Setter Property="Background" Value="Snow"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
